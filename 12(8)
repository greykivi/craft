#include <ctype.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define MAX_SIZE 15

int count = 0;

typedef struct buses bus;

struct buses {
  int number;           // номер автобуса
  char destination[15]; // пункт назначения
  float dep_time;       // departure time - время отбытия
  float arr_time;       // arrival time - время прибытия
  struct tm time_dep;
  struct tm time_arr;
} buses;

int input(struct buses *);
void print(struct buses *);
void delet(struct buses *);
void find(struct buses *);

// Игнорирование символов
void flush_input(void) {
  char c;
  while (scanf("%c", &c) == 1 && c != '\n')
    ;
}

// запись структуры в файл
void save(FILE *f, struct buses *bus) {
  for (int i = 0; i < count; i++)
    fprintf(f, "%d|%s|%d|%d|%d|%d\n", bus[i].number, bus[i].destination,
            bus[i].time_dep.tm_hour, bus[i].time_dep.tm_min,
            bus[i].time_arr.tm_hour, bus[i].time_arr.tm_min);
}

// Получение записей с файла
void load(FILE *f, struct buses *bus) {
  char str[255];
  char *istr;
  while (fgets(str, 256, f) != NULL) {
    istr = strtok(str, "|");
    bus[count].number = atoi(istr);

    istr = strtok(NULL, "|");
    sprintf(bus[count].destination, "%s", istr);

    istr = strtok(NULL, "|");
    bus[count].time_dep.tm_hour = atoi(istr);

    istr = strtok(NULL, "|");
    bus[count].time_dep.tm_min = atoi(istr);

    istr = strtok(NULL, "|");
    bus[count].time_arr.tm_hour = atoi(istr);

    istr = strtok(NULL, "|");
    bus[count].time_arr.tm_min = atoi(istr);

    count++;
  }
}

int main() {
  struct buses bus[100];
  FILE *file = fopen("Buses.txt", "r");
  int n;
  char c;

  while (1) {
    printf("\n1. Добавить номер автобуса и его место назначения.\n");
    printf("2. Вывести список автобусов.\n");
    printf("3. Удалить автобусную базу данных.\n");
    printf("4. Получить данные об автобусах, следующих в заданный город.\n");
    printf("5  Загрузить базу данных из файла.\n");
    printf("6  Сохранить базу данных из файла.\n");
    printf("7. Выход.\n");
    // c = getchar();
    // Получение запроса
    printf("--> ");
    scanf("%d", &n);
    if (n == 1) {
      // system("cls");
      system("clear");
      int k = input(bus);
    } else if (n == 2) {
      // system("cls");
      system("clear");
      print(bus);
    } else if (n == 3)

      delet(bus);

    else if (n == 4) {
      // system("cls");
      system("clear");
      find(bus);
    } else if (n == 5) {
      // system("cls");
      system("clear");
      load(file, bus);
      fclose(file);
    } else if (n == 6) {
      // system("cls");
      system("clear");
      file = fopen("Buses.txt", "w");
      save(file, bus);
      fclose(file);
    } else if (n == 7)

      return 0;
  }
}
//Добавление
int input(struct buses *bus) {
  printf("\nДобавить номер автобуса и его место назначения \n");
  for (int i = count; i < count + 1; i++) {
    scanf("%d %s", &bus[i].number, bus[i].destination);

    printf("Пример: Часы.Минуты\n");
    printf("Время отправления -->");
    int hour, min;
  a:
    scanf("%d.%d", &hour, &min);
    if ((24 < hour) || (hour < 0) || (59 < min) || (min < 0)) {
      printf("Неверное значение.\n Повторите попытку.\n");
      printf("Время отправления -->");
      goto a;
    }
    bus[i].time_dep.tm_hour = hour;
    bus[i].time_dep.tm_min = min;
  b:
    printf("Время прибытия -->");
    scanf("%d.%d", &hour, &min);
    if ((24 < hour) || (hour < 0) || (59 < min) || (min < 0)) {
      printf("Неверное значение.\n Повторите попытку.\n");
      printf("Время прибытия -->");
      goto b;
    }
    bus[i].time_arr.tm_hour = hour;
    bus[i].time_arr.tm_min = min;
  }
  count++;
}

//Вывод информации о существующих
void print(struct buses bus[]) {
  if (!count)
    printf("Пустой массив\n");
  else
    for (int i = 0; i < count; i++) {
      char d_time[15];
      char a_time[15];
      strftime(d_time, 15, "%H.%M", &bus[i].time_dep);
      strftime(a_time, 15, "%H.%M", &bus[i].time_arr);
      printf("[%d]Номер автобуса: %d, пункт назначения: %s, время отправления: %s, время прибытия: %s\n",
             i + 1, bus[i].number, bus[i].destination,
             // bus[i].dep_time, bus[i].arr_time);
             d_time, a_time);
    }
}

//Удаление
void delet(struct buses *bus) {
  if (count) {
    int i, num;

    printf("Введите порядковый номер автобуса, который вы хотите удалить: ");
    scanf("%d", &num);

    for (i = num; i < count + 1; ++i)
      bus[i - 1] = bus[i];

    --count;
  } else {
    system("cls");
    printf("Массив пуст!\n");
  }
}
//Поиск
void find(struct buses *bus) {
  char c[15];
  int temp = 0;
  printf("Введите название города\n");
  scanf("%s", c);
  for (int i = 0; i < count; i++) {
    // if (bus[i].destination == c)
    if (!strcmp(bus[i].destination, c)) {
      printf("[%d]Номер автобуса: %d, пункт назначения: %s, время отправления: %0.2f, время прибытия %0.2f\n",
             i + 1, bus[i].number, bus[i].destination, bus[i].dep_time,
             bus[i].arr_time);
      temp = temp + 1;
    }
  }
  if (!temp)
    printf("Рейсов в этот город нет\n ");
}
